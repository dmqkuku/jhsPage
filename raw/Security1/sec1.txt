1

# Security by Pope Kim.
-------------------------

암호화 Encryption이란. 평문 -> 암호문. 암호문은 "특정 정보"가 있어야 해독 가능.

암호학적 해시 알고리듬의 목적은 해시 -> 원문 즉 원문 복구를 불가능하게 만드는 것이 목적,

암호화 알고리즘은 원문 복구를 허용.

대칭 키 암호화(Symmetric key Encryption)
-> 암호화 복호화에 동일한 키 사용.

비대칭 키 암호화 (Asymmetric key Encryption)
-> 암호화와 복호화 에 사용하는 키가 다름.
-> 공개 키 암호화 라고도 함.

-----------------------------

대칭 키 암호화...

키를 수신자와 송신자가 공유하고 있어야 한다....
즉 비밀스럽게 송신자에게 발급자가 키를 알려주고. safe하게 지켜야 한다. <- 단점!!

A XOR B = C.
C XOR B = A.

스트림 암호(Stream cipher) -> 한번에 1바이트씩 암호화. 각 바이트에 적용하는 키가 달라야 안전. <- 시드를 이용한 난수로 생성하는게 일반적.

블록 암호(Block Cipher) -> 정해진 블록 크기(64비트 이상 = 8 바이트 이상) 씩 한 번 에 암호화. 각 블록에 사용하는 키가 동일.

WIFI 비밀번호도 일종의 대칭 키.
스마트폰과 공유기 사이에 통신시 이 키로 암호화.

DES(Data Encryption Standard)
AES(Advanced Encryption Standard)
 -> 일급 비밀 용으로 승인한 유일한 공개 암호화 알고리즘. 블록 크기 : 128비트.
 키 길이 : 128, 192, 256 비트.
 라운드 :  10 ,  12  ,14

 AES -> 16바이트 씩 읽는다.
 16바이트를 4 * 4 행렬로 재배치. -> 행렬 연산 수행.

 1. 키 확장 
    대칭 키로부터 각 라운드에 사용할 여러 키를 생성(라운드 키)
    AES Key Schedule.
    총 라운드 + 1개
    라운드 키는 대칭키의 길이와 상관없이 128 비트. == 16 바이트.
 2. 0라운드 : 라운드 키 더하기
    라운드 키를 원문에 더함. 더한다 == XOR(배타합)
    어떻게 16진수 끼리 배타합 쉽게 계산??? -> 다른 비트 연산도..
    어떻게 8진수 끼리 배타합 쉽게 계산??? -> 다른 비트 연산도..

    -> 원본 메시지 숨기는 목적.
 3. 9/11/13라운드 : 바이트 대체. 행 이동. 열 섞기. 라운드 키 더하기
    바이트 대체 -> 각 바이트를 룩업 테이블을 이용해 다른 바이트로 대체.(SubBytes라고 부름) (AES S-Box가 테이블)
               -> 선형적인 변환(연산)이 아니라 단순 사칙. 비트 연산으로 찾을 수 없다. ==> 흩뿌려놓기. 혼란(confusion) 효과.
    행 이동 -> 각 행을 다르게 ShiftRows. 
            1 행 : 이동 없음
            2 행 : 1
            3 행 : 2
            4 행 : 3 -> 확산(diffusion) 효과
    열 섞기 -> 각 열의 4 바이트를 선형적으로 변환. 
            -> 행렬 벡터 곱을 사용? 
            + 는 XOR.
            X 는 특별한 비트 곱셈.
    
 4. 최종 라운드 : 바이트 대체. 행 이동. 라운드 키 더하기.

-------------------------------------------------------

 비대칭 키 암호화....

 두 키 . 공개키와 비밀키는 특수한 관계가 존재하여. 
 한 키로 암호화한 메시지를 다른 키로 복호화 가능.
 
