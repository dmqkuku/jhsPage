Representing Code!!!

5.1 Context-Free Grammars

    regular language -> chars의 그룹으로 이루어진 tokens...
    -> 아주 깊은 depth의 nested 구조에는 취약

    Formal Grammars의 toolbox 중에서...
    -> CFG(Context free Grammar)
    => Formal Grammars => 특정 charsequence -> in grammar.

    우리는 유한한 rules를 만들어 놓는다. => derivation을 만들어낸다. (rules에서 만들어 낸 string)
    Terminal : letter from the grammar's alphabet; don't lead to any furher 'moves' in the 해석
    NonTerminal : named reference to another rule in the grammar; lead to 'moves' in the 해석


    expression → literal
                    | unary
                    | binary
                    | grouping ;
    literal → NUMBER | STRING | "true" | "false" | "nil" ;
    grouping → "(" expression ")" ;
    unary → ( "-" | "!" ) expression ;
    binary → expression operator expression ;
    operator → "==" | "!=" | "<" | "<=" | ">" | ">="
                    | "+" | "-" | "*" | "/" ;

    전위.   후위.     중위
      1       3        1
    2   3   2  1    2    3 
    Syntax Tree:

    Visitors Pattern : 