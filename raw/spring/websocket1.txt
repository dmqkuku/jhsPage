근 1년 만에 다시 잡은 웹소켓....

다까먹음.

정리해놓을 필요가 있음..

그때 당시에는 스프링에 구현했었다. 당시 조사하면서 스프링 부트로 된 예제가 많았는데. 스프링 부트와 스프링이 많이 다른 줄 알고. (사실 설정만 좀 바꾸면 스프링 부트에서 쓰던 것을 그대로 스프링에서 쓸 수 있다.) 멘붕했었던 기억이 있다.

간단히 공식 DOCS를 참고하여 정리해보자.
https://docs.spring.io/spring-framework/docs/4.3.x/spring-framework-reference/html/websocket.html

일단 WEBSOCKET의 기술 명세를 구현한 것중 하나가 스프링의 웹소켓이다.

특성 : FullDuplex? Two-way Communication.
잘 알듯이 일반적인 서버는 클라이언트에 일방적인 요청에 응답하는 것이지.

클라이언트에게 능동적으로 메시지를 전하려면 polling과 같은 편법을 써야 했다.

이 웹소켓에서 HTTP는 초기 handshake에만 사용되고. handshake란 HTTP통신을 protocol upgrade/switch 해달라는 요청이다.
-> 여기에 서버가 101 상태값으로 반응하면. -> Websocket established!

Spring 4.부터 포함됨!

IE10부터 구현됨!

Therefore to build a WebSocket application today, fallback options are required in order to simulate the WebSocket API where necessary. The Spring Framework provides such transparent fallback options based on the SockJS protocol
???뭔소리


1.2 Messaging Architecture.

